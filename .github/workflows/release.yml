name: Release Build

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_GITHUB_TOKEN }}

      - name: Set output release tag (release event)
        id: release
        if: github.event_name == 'release'
        run: echo "::set-output name=tag::${{ github.event.release.tag_name }}"

      - name: Set output release tag (workflow_dispatch)
        id: dispatch
        if: github.event_name == 'workflow_dispatch'
        run: echo "::set-output name=tag::${{ github.event.inputs.tag }}"

      - name: Build and Push Docker Image for Personal Website
        run: |
          # Determine the release version based on the event type.
          RELEASE_VERSION=${{ github.event.release.tag_name }}
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            RELEASE_VERSION=${{ github.event.inputs.tag }}
          fi

          # Remove a leading "v" if present (e.g. turn "v1.3.5" into "1.3.5")
          RELEASE_VERSION="${RELEASE_VERSION#v}"
          echo "Using release version: $RELEASE_VERSION"

          # Automatically extract owner and repository name from GITHUB_REPOSITORY (format: owner/repo) and cast both to lower-case.
          OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1 | tr '[:upper:]' '[:lower:]')
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          echo "Owner (lowercase): $OWNER"
          echo "Repository Name (lowercase): $REPO_NAME"

          # Build the Docker image with two tags: the version tag and latest.
          docker build . -t ghcr.io/${OWNER}/${REPO_NAME}:$RELEASE_VERSION -t ghcr.io/${OWNER}/${REPO_NAME}:latest

          # Push both tags to GHCR.
          docker push ghcr.io/${OWNER}/${REPO_NAME}:$RELEASE_VERSION
          docker push ghcr.io/${OWNER}/${REPO_NAME}:latest
